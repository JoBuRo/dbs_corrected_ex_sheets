--- Aufgabe 1 ---

a)
CREATE OR REPLACE VIEW
CITY_LAT_LON ( NAME , COUNTRY , PROVINCE , POPULATION , LAT , LON ) AS
SELECT name , country , province , population ,
CAST ( TRUNC ( latitude ) AS NUMBER (3) ),
CAST ( TRUNC ( longitude ) AS NUMBER (3) )
FROM City ;

SELECT ci. country , lat , lon , SUM ( population ), COUNT (*)
FROM City_Lat_Lon ci , is_member
WHERE ci. country = is_member . country AND is_member . organization = q''OPEC''
GROUP BY GROUPING SETS ((ci.country, lon, lat), (ci.country, lon), (ci.country), ())
ORDER BY ci. country , lat , lon ;

b)

Die ROLLUP-Klausel erweitert GROUP BY, um eine Zeile zurückzugeben,
die eine Zwischensumme für jede Gruppe von Zeilen enthält,
sowie eine Zeile, die eine Summe für alle Gruppen enthält.
 
Die CUBE-Klausel erweitert GROUP BY, um Zeilen zurückzugeben, 
die eine Zwischensumme für alle Kombinationen von Spalten enthalten, 
sowie eine Zeile, die die Gesamtsumme enthält.

GROUP BY CUBE (<Liste zusammengesetzter Elemente>) mit n Dimensionen 
in der Eingabeliste entspricht GROUPING SETS mit dem vollständigen 
Satz (2n Kombinationen der Dimensionen in der Eingabeliste) als GROUPING SETS. 
und Angabe von GROUPING SETS (<Gruppierungsmenge> [, ... n]), 
da die GROUP BY-Liste einer UNION ALL von Abfragen entspricht, 
die jeweils eine Gruppierungsmenge als GROUP BY-Liste haben. 
Aggregate für Gleitpunktzahlen können geringfügig abweichende Ergebnisse liefern.

--- Aufgabe 2 ---

Nach dem ersten REVOKE --> Benutzer A entzieht die Select und Insert Rechte von C,
jedoch B erlaubt C den Zugang. Deshalb nur ein X auf Insert Recht von C.

Nach dem zweiten REVOKE --> Benutzer A entzieht das Delete Recht von B,
deswegen X auf Delete Recht von B.

Nach dem dritten REVOKE --> Benutzer B darf nicht mehr Rechte geben, da Benutzer A
das GRANT OPTION Recht von B entzieht. X auf das Select Recht von C.

Nach dem vierten REVOKE --> Benutzer A entzieht das Update Recht von C. 
X auf das Update Recht von C.

--- Aufgabe 3 ---

